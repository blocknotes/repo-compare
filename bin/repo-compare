#!/usr/bin/env ruby
# frozen_string_literal: true

require 'repo-compare/config'
require 'repo-compare/git_remote_update'
require 'repo-compare/git_diff'
require 'repo-compare/git_diff_raw'
require 'repo-compare/summary'

# Check the arguments
action = nil
ARGV.each do |arg|
  case arg
  when '-h', '--help'
    puts <<~HELP
      Repo Compare: a tool to detect changes between 2 repositories

      Options:
        -h or --help    : show this help
        -s or --summary : generate an XML summary of the files changed (useful for CI)
        -u or --update  : update the config file setting the current hashes to ignore
    HELP
    exit 0
  when '-s', '--summary'
    action = :summary
  when '-u', '--update'
    action = :update
  end
end

# Load the config options
config = RepoCompare::Config.new
config_hash = config.to_h

# Update the remote source
RepoCompare::GitRemoteUpdate.new(config_hash).call

# Compare paths
results = config_hash['paths'].map do |path|
  RepoCompare::GitDiffRaw.new(config_hash, path).call.merge(src: path)
end

if action == :summary
  # Prepare a summary
  puts RepoCompare::Summary.new(config_hash, results).to_xml
else
  # Prepare a detailed diff
  results.each do |res|
    diff = RepoCompare::GitDiff.new(config_hash, res).call
    puts diff unless diff.empty?
  end
end

# Update the config
config.update(results) if action == :update
